/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("carga_AC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("carga_NZ")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("carga_PC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("carga_RDM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("carga_REM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("carga_RI")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("goto_t0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("inc_PC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("N")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("op")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("op[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "op";
}

SIGNAL("op[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "op";
}

SIGNAL("op[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "op";
}

SIGNAL("op[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "op";
}

SIGNAL("read")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("rst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ULA_ADD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ULA_AND")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ULA_NOT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ULA_OR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ULA_Y")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("write")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("carga_AC")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.18;
			LEVEL 0 FOR 187.62;
			LEVEL 1 FOR 10.003;
			LEVEL 0 FOR 69.997;
			LEVEL 1 FOR 10.003;
			LEVEL 0 FOR 69.997;
			LEVEL 1 FOR 10.003;
			LEVEL 0 FOR 69.997;
			LEVEL 1 FOR 10.003;
			LEVEL 0 FOR 29.619;
			LEVEL 1 FOR 10.037;
			LEVEL 0 FOR 518.541;
		}
	}
}

TRANSITION_LIST("carga_NZ")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.231;
			LEVEL 0 FOR 187.622;
			LEVEL 1 FOR 10.001;
			LEVEL 0 FOR 69.999;
			LEVEL 1 FOR 10.001;
			LEVEL 0 FOR 69.999;
			LEVEL 1 FOR 10.001;
			LEVEL 0 FOR 69.999;
			LEVEL 1 FOR 10.001;
			LEVEL 0 FOR 29.621;
			LEVEL 1 FOR 10.035;
			LEVEL 0 FOR 518.49;
		}
	}
}

TRANSITION_LIST("carga_PC")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.325;
			LEVEL 0 FOR 527.709;
			LEVEL 1 FOR 9.914;
			LEVEL 0 FOR 130.086;
			LEVEL 1 FOR 9.914;
			LEVEL 0 FOR 50.086;
			LEVEL 1 FOR 9.914;
			LEVEL 0 FOR 259.052;
		}
	}
}

TRANSITION_LIST("carga_RDM")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.362;
			LEVEL 0 FOR 97.903;
			LEVEL 1 FOR 9.858;
			LEVEL 0 FOR 888.877;
		}
	}
}

TRANSITION_LIST("carga_REM")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.208;
			LEVEL 1 FOR 7.546;
			LEVEL 0 FOR 30.077;
			LEVEL 1 FOR 9.923;
			LEVEL 0 FOR 19.529;
			LEVEL 1 FOR 10.089;
			LEVEL 0 FOR 10.343;
			LEVEL 1 FOR 10.136;
			LEVEL 0 FOR 19.98;
			LEVEL 1 FOR 9.923;
			LEVEL 0 FOR 19.529;
			LEVEL 1 FOR 10.089;
			LEVEL 0 FOR 10.343;
			LEVEL 1 FOR 10.136;
			LEVEL 0 FOR 19.98;
			LEVEL 1 FOR 9.923;
			LEVEL 0 FOR 19.529;
			LEVEL 1 FOR 10.089;
			LEVEL 0 FOR 10.343;
			LEVEL 1 FOR 10.136;
			LEVEL 0 FOR 19.98;
			LEVEL 1 FOR 9.923;
			LEVEL 0 FOR 19.529;
			LEVEL 1 FOR 10.089;
			LEVEL 0 FOR 10.343;
			LEVEL 1 FOR 10.136;
			LEVEL 0 FOR 19.98;
			LEVEL 1 FOR 9.923;
			LEVEL 0 FOR 19.529;
			LEVEL 1 FOR 10.089;
			LEVEL 0 FOR 10.343;
			LEVEL 1 FOR 10.136;
			LEVEL 0 FOR 19.98;
			LEVEL 1 FOR 9.923;
			LEVEL 0 FOR 30.077;
			LEVEL 1 FOR 9.923;
			LEVEL 0 FOR 19.529;
			LEVEL 1 FOR 10.089;
			LEVEL 0 FOR 20.459;
			LEVEL 1 FOR 9.923;
			LEVEL 0 FOR 30.077;
			LEVEL 1 FOR 9.923;
			LEVEL 0 FOR 30.077;
			LEVEL 1 FOR 9.923;
			LEVEL 0 FOR 19.529;
			LEVEL 1 FOR 10.089;
			LEVEL 0 FOR 20.459;
			LEVEL 1 FOR 9.923;
			LEVEL 0 FOR 19.529;
			LEVEL 1 FOR 10.089;
			LEVEL 0 FOR 20.459;
			LEVEL 1 FOR 258.169;
		}
	}
}

TRANSITION_LIST("carga_RI")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.396;
			LEVEL 0 FOR 18.033;
			LEVEL 1 FOR 9.843;
			LEVEL 0 FOR 30.157;
			LEVEL 1 FOR 9.843;
			LEVEL 0 FOR 70.157;
			LEVEL 1 FOR 9.843;
			LEVEL 0 FOR 70.157;
			LEVEL 1 FOR 9.843;
			LEVEL 0 FOR 70.157;
			LEVEL 1 FOR 9.843;
			LEVEL 0 FOR 70.157;
			LEVEL 1 FOR 9.843;
			LEVEL 0 FOR 70.157;
			LEVEL 1 FOR 9.843;
			LEVEL 0 FOR 30.157;
			LEVEL 1 FOR 9.843;
			LEVEL 0 FOR 50.157;
			LEVEL 1 FOR 9.843;
			LEVEL 0 FOR 30.157;
			LEVEL 1 FOR 9.843;
			LEVEL 0 FOR 30.157;
			LEVEL 1 FOR 9.843;
			LEVEL 0 FOR 50.157;
			LEVEL 1 FOR 9.843;
			LEVEL 0 FOR 288.728;
		}
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("goto_t0")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.459;
			LEVEL 0 FOR 27.307;
			LEVEL 1 FOR 10.055;
			LEVEL 0 FOR 70.196;
			LEVEL 1 FOR 10.086;
			LEVEL 0 FOR 69.914;
			LEVEL 1 FOR 10.086;
			LEVEL 0 FOR 69.914;
			LEVEL 1 FOR 10.086;
			LEVEL 0 FOR 69.914;
			LEVEL 1 FOR 10.086;
			LEVEL 0 FOR 69.914;
			LEVEL 1 FOR 10.086;
			LEVEL 0 FOR 29.663;
			LEVEL 1 FOR 10.055;
			LEVEL 0 FOR 50.333;
			LEVEL 1 FOR 9.928;
			LEVEL 0 FOR 29.684;
			LEVEL 1 FOR 10.055;
			LEVEL 0 FOR 29.945;
			LEVEL 1 FOR 10.055;
			LEVEL 0 FOR 50.333;
			LEVEL 1 FOR 9.928;
			LEVEL 0 FOR 50.072;
			LEVEL 1 FOR 9.928;
			LEVEL 0 FOR 257.918;
		}
	}
}

TRANSITION_LIST("inc_PC")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.725;
			LEVEL 0 FOR 7.531;
			LEVEL 1 FOR 9.723;
			LEVEL 0 FOR 30.277;
			LEVEL 1 FOR 9.723;
			LEVEL 0 FOR 20.364;
			LEVEL 1 FOR 9.918;
			LEVEL 0 FOR 39.995;
			LEVEL 1 FOR 9.723;
			LEVEL 0 FOR 19.832;
			LEVEL 1 FOR 9.868;
			LEVEL 0 FOR 40.577;
			LEVEL 1 FOR 9.723;
			LEVEL 0 FOR 19.832;
			LEVEL 1 FOR 9.868;
			LEVEL 0 FOR 40.577;
			LEVEL 1 FOR 9.723;
			LEVEL 0 FOR 19.832;
			LEVEL 1 FOR 9.868;
			LEVEL 0 FOR 40.577;
			LEVEL 1 FOR 9.723;
			LEVEL 0 FOR 19.832;
			LEVEL 1 FOR 9.868;
			LEVEL 0 FOR 40.577;
			LEVEL 1 FOR 9.723;
			LEVEL 0 FOR 30.277;
			LEVEL 1 FOR 9.723;
			LEVEL 0 FOR 50.277;
			LEVEL 1 FOR 9.723;
			LEVEL 0 FOR 10.186;
			LEVEL 1 FOR 10.139;
			LEVEL 0 FOR 9.952;
			LEVEL 1 FOR 9.723;
			LEVEL 0 FOR 9.924;
			LEVEL 1 FOR 10.081;
			LEVEL 0 FOR 10.272;
			LEVEL 1 FOR 9.723;
			LEVEL 0 FOR 50.277;
			LEVEL 1 FOR 9.723;
			LEVEL 0 FOR 298.021;
		}
	}
}

TRANSITION_LIST("N")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 620.0;
			LEVEL 1 FOR 380.0;
		}
	}
}

TRANSITION_LIST("op[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 520.0;
		}
	}
}

TRANSITION_LIST("op[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 280.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 260.0;
			LEVEL 1 FOR 260.0;
		}
	}
}

TRANSITION_LIST("op[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 320.0;
		}
	}
}

TRANSITION_LIST("op[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 260.0;
		}
	}
}

TRANSITION_LIST("read")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.206;
			LEVEL 0 FOR 7.555;
			LEVEL 1 FOR 9.724;
			LEVEL 0 FOR 30.276;
			LEVEL 1 FOR 9.724;
			LEVEL 0 FOR 20.323;
			LEVEL 1 FOR 9.901;
			LEVEL 0 FOR 40.052;
			LEVEL 1 FOR 9.724;
			LEVEL 0 FOR 20.323;
			LEVEL 1 FOR 9.901;
			LEVEL 0 FOR 10.134;
			LEVEL 1 FOR 9.904;
			LEVEL 0 FOR 20.014;
			LEVEL 1 FOR 9.724;
			LEVEL 0 FOR 20.323;
			LEVEL 1 FOR 9.901;
			LEVEL 0 FOR 10.134;
			LEVEL 1 FOR 9.904;
			LEVEL 0 FOR 20.014;
			LEVEL 1 FOR 9.724;
			LEVEL 0 FOR 20.323;
			LEVEL 1 FOR 9.901;
			LEVEL 0 FOR 10.134;
			LEVEL 1 FOR 9.904;
			LEVEL 0 FOR 20.014;
			LEVEL 1 FOR 9.724;
			LEVEL 0 FOR 20.323;
			LEVEL 1 FOR 9.901;
			LEVEL 0 FOR 10.134;
			LEVEL 1 FOR 9.904;
			LEVEL 0 FOR 20.014;
			LEVEL 1 FOR 9.724;
			LEVEL 0 FOR 30.276;
			LEVEL 1 FOR 9.724;
			LEVEL 0 FOR 20.323;
			LEVEL 1 FOR 9.901;
			LEVEL 0 FOR 20.052;
			LEVEL 1 FOR 9.724;
			LEVEL 0 FOR 30.276;
			LEVEL 1 FOR 9.724;
			LEVEL 0 FOR 30.276;
			LEVEL 1 FOR 9.724;
			LEVEL 0 FOR 20.323;
			LEVEL 1 FOR 9.901;
			LEVEL 0 FOR 20.052;
			LEVEL 1 FOR 9.724;
			LEVEL 0 FOR 20.323;
			LEVEL 1 FOR 9.901;
			LEVEL 0 FOR 268.291;
		}
	}
}

TRANSITION_LIST("rst")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("sel")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.954;
			LEVEL 0 FOR 87.687;
			LEVEL 1 FOR 10.101;
			LEVEL 0 FOR 69.899;
			LEVEL 1 FOR 10.101;
			LEVEL 0 FOR 69.899;
			LEVEL 1 FOR 10.101;
			LEVEL 0 FOR 69.899;
			LEVEL 1 FOR 10.101;
			LEVEL 0 FOR 69.899;
			LEVEL 1 FOR 10.101;
			LEVEL 0 FOR 578.258;
		}
	}
}

TRANSITION_LIST("ULA_ADD")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.482;
			LEVEL 0 FOR 267.628;
			LEVEL 1 FOR 9.995;
			LEVEL 0 FOR 718.895;
		}
	}
}

TRANSITION_LIST("ULA_AND")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.47;
			LEVEL 0 FOR 427.633;
			LEVEL 1 FOR 9.99;
			LEVEL 0 FOR 558.907;
		}
	}
}

TRANSITION_LIST("ULA_NOT")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.728;
			LEVEL 0 FOR 467.632;
			LEVEL 1 FOR 9.991;
			LEVEL 0 FOR 517.649;
		}
	}
}

TRANSITION_LIST("ULA_OR")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.497;
			LEVEL 0 FOR 347.631;
			LEVEL 1 FOR 9.992;
			LEVEL 0 FOR 638.88;
		}
	}
}

TRANSITION_LIST("ULA_Y")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.798;
			LEVEL 0 FOR 187.614;
			LEVEL 1 FOR 10.009;
			LEVEL 0 FOR 798.579;
		}
	}
}

TRANSITION_LIST("write")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.334;
			LEVEL 0 FOR 107.794;
			LEVEL 1 FOR 9.829;
			LEVEL 0 FOR 879.043;
		}
	}
}

TRANSITION_LIST("Z")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 620.0;
			LEVEL 1 FOR 380.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "op";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6;
}

DISPLAY_LINE
{
	CHANNEL = "op[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "op[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "op[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "op[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "N";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "carga_AC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "carga_NZ";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "carga_PC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "carga_RDM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "carga_REM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "carga_RI";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "goto_t0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "inc_PC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "read";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ULA_ADD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ULA_AND";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ULA_NOT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ULA_OR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ULA_Y";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "write";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
